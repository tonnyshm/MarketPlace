version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: marketplace-postgres
    environment:
      POSTGRES_DB: marketplace
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - marketplace-network

  # RabbitMQ for message queue
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: marketplace-rabbitmq
    ports:
      - "5672:5672"  # AMQP protocol port
      - "15672:15672"  # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - marketplace-network

  # MailHog for email testing
  mailhog:
    image: mailhog/mailhog
    container_name: marketplace-mailhog
    ports:
      - "1025:1025"  # SMTP server
      - "8025:8025"  # Web UI
    networks:
      - marketplace-network

  # Spring Boot Backend
  backend:
    build:
      context: ./marketplace-api
      dockerfile: Dockerfile
    container_name: marketplace-backend
    ports:
      - "8082:8082"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/marketplace
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_MAIL_HOST: mailhog
      SPRING_MAIL_PORT: 1025
    depends_on:
      - postgres
      - rabbitmq
      - mailhog
    networks:
      - marketplace-network

  # Next.js Frontend
  frontend:
    build:
      context: ./marketplace-front-end
      dockerfile: Dockerfile
    container_name: marketplace-frontend
    ports:
      - "3000:3000"
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8082
    depends_on:
      - backend
    networks:
      - marketplace-network

networks:
  marketplace-network:
    driver: bridge

volumes:
  postgres_data:
  rabbitmq_data: 